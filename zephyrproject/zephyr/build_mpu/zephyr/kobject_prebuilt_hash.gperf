%compare-lengths
%define lookup-function-name z_object_lookup
%language=ANSI-C
%global-table
%struct-type
%{
#include <zephyr/kernel.h>
#include <zephyr/toolchain.h>
#include <zephyr/internal/syscall_handler.h>
#include <string.h>
%}
struct k_object;
static uint8_t Z_GENERIC_SECTION(.priv_stacks.noinit)  __aligned(Z_KERNEL_STACK_OBJ_ALIGN) priv_stacks[2][K_KERNEL_STACK_LEN(CONFIG_PRIVILEGED_STACK_SIZE)];
static const struct z_stack_data stack_data[2] = {
	{ 16384, (uint8_t *)(&priv_stacks[0]) },
	{ 20480, (uint8_t *)(&priv_stacks[1]) }
};
%%
"\x4c\x45\x03\x08", {0}, K_OBJ_DRIVER_CLOCK_CONTROL, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x60\x45\x03\x08", {0}, K_OBJ_DRIVER_RESET, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x88\x45\x03\x08", {0}, K_OBJ_DRIVER_GPIO, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x9c\x45\x03\x08", {0}, K_OBJ_DRIVER_GPIO, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\xb0\x45\x03\x08", {0}, K_OBJ_DRIVER_GPIO, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\xc4\x45\x03\x08", {0}, K_OBJ_DRIVER_GPIO, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\xd8\x45\x03\x08", {0}, K_OBJ_DRIVER_GPIO, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\xec\x45\x03\x08", {0}, K_OBJ_DRIVER_GPIO, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x00\x46\x03\x08", {0}, K_OBJ_DRIVER_GPIO, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x14\x46\x03\x08", {0}, K_OBJ_DRIVER_GPIO, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x28\x46\x03\x08", {0}, K_OBJ_DRIVER_UART, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x3c\x46\x03\x08", {0}, K_OBJ_DRIVER_UART, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x50\x46\x03\x08", {0}, K_OBJ_DRIVER_UART, 0 | K_OBJ_FLAG_DRIVER, { .unused = 0 }
"\x60\x08\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 0 }
"\x00\x09\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 1 }
"\xa8\x0d\x00\x20", {0}, K_OBJ_TIMER, 0, { .unused = 0 }
"\xe0\x0d\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 2 }
"\xb0\x0e\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 3 }
"\x88\x0f\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 4 }
"\x60\x10\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 5 }
"\x38\x11\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 6 }
"\x10\x12\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 7 }
"\xf8\x12\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 9 }
"\x98\x13\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 8 }
"\x38\x14\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 10 }
"\xf8\x14\x00\x20", {0}, K_OBJ_THREAD, 0, { .thread_id = 11 }
"\x58\x50\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xa0\x50\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xe8\x50\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x30\x51\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x78\x51\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xa4\x52\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xb8\x52\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\xc8\x52\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xdc\x52\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\xec\x52\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x00\x53\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x10\x53\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x24\x53\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x34\x53\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x48\x53\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x5c\x53\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x64\x53\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x6c\x53\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x74\x53\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x7c\x53\x00\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x84\x53\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x98\x53\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xac\x53\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xc0\x53\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xd4\x53\x00\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x5c\x57\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x88\x57\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xb4\x57\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xe0\x57\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x0c\x58\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x38\x58\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x64\x58\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x90\x58\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xbc\x58\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xe8\x58\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x14\x59\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x40\x59\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x6c\x59\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x98\x59\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xc4\x59\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xf0\x59\x00\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\xc0\x8b\x00\x20", {0}, K_OBJ_THREAD_STACK_ELEMENT, 0, { .stack_data = &stack_data[0] }
"\xc0\xcb\x00\x20", {0}, K_OBJ_THREAD_STACK_ELEMENT, 0, { .stack_data = &stack_data[1] }
"\x8c\x1c\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xa0\x1c\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\xbc\x1c\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xd0\x1c\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\xec\x1c\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x00\x1d\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x1c\x1d\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x30\x1d\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x4c\x1d\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x60\x1d\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x7c\x1d\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x90\x1d\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\xac\x1d\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xc0\x1d\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\xdc\x1d\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xf0\x1d\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x0c\x1e\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x20\x1e\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x3c\x1e\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x50\x1e\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x6c\x1e\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x80\x1e\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x9c\x1e\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xb0\x1e\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\xcc\x1e\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\xe0\x1e\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\xfc\x1e\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x10\x1f\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x2c\x1f\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x40\x1f\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x5c\x1f\x01\x20", {0}, K_OBJ_MUTEX, 0, { .unused = 0 }
"\x70\x1f\x01\x20", {0}, K_OBJ_CONDVAR, 0, { .unused = 0 }
"\x4c\x21\x01\x20", {0}, K_OBJ_SEM, 0, { .unused = 0 }
"\x80\x21\x01\x20", {0}, K_OBJ_MUTEX, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
"\x94\x21\x01\x20", {0}, K_OBJ_MUTEX, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
"\xa8\x21\x01\x20", {0}, K_OBJ_MUTEX, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
"\xbc\x21\x01\x20", {0}, K_OBJ_MUTEX, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
"\xd0\x21\x01\x20", {0}, K_OBJ_MUTEX, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
"\xe4\x21\x01\x20", {0}, K_OBJ_SEM, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
"\xfc\x21\x01\x20", {0}, K_OBJ_SEM, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
"\x14\x22\x01\x20", {0}, K_OBJ_SEM, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
"\x2c\x22\x01\x20", {0}, K_OBJ_SEM, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
"\x44\x22\x01\x20", {0}, K_OBJ_SEM, 0 | K_OBJ_FLAG_INITIALIZED, { .unused = 0 }
%%
struct k_object *z_object_gperf_find(const void *obj)
{
    return z_object_lookup((const char *)obj, sizeof(void *));
}

void z_object_gperf_wordlist_foreach(_wordlist_cb_func_t func, void *context)
{
    int i;

    for (i = MIN_HASH_VALUE; i <= MAX_HASH_VALUE; i++) {
        if (wordlist[i].name != NULL) {
            func(&wordlist[i], context);
        }
    }
}

#ifndef CONFIG_DYNAMIC_OBJECTS
struct k_object *k_object_find(const void *obj)
	ALIAS_OF(z_object_gperf_find);

void k_object_wordlist_foreach(_wordlist_cb_func_t func, void *context)
	ALIAS_OF(z_object_gperf_wordlist_foreach);
#endif

Z_GENERIC_DOT_SECTION(data)
uint8_t _thread_idx_map[2] = { 0x0,  0xf0, };
